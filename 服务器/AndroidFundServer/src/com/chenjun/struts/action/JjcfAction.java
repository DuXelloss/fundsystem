/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.chenjun.struts.action;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.chenjun.dao.MySQLConnection;
import com.chenjun.fund.model.Jjcf;
import com.chenjun.struts.form.JjcfForm;
import com.chenjun.utils.compress.Compress;
import com.google.gson.Gson;

/** 
 * MyEclipse Struts
 * Creation date: 03-08-2012
 * 
 * XDoclet definition:
 * @struts.action path="/jjcf" name="jjcfForm" input="/jjcfTestJsp.jsp" scope="request" validate="true"
 */
public class JjcfAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		JjcfForm jjcfForm = (JjcfForm) form;
		
		String dm = jjcfForm.getDm();
		MySQLConnection conn = new MySQLConnection();
		
		List<Jjcf> jjcfs = conn.queryJjcf(dm);
		
		Gson gson = new Gson();
		String jsonStr = gson.toJson(jjcfs, jjcfs.getClass());
		
		byte[] resultOriginalByte = jsonStr.getBytes();
		ByteArrayOutputStream resultBuffer = new ByteArrayOutputStream();
		OutputStream os = null;
		
		try {
			
			os = response.getOutputStream();
			//如果要返回的结果字节数组小于50位，不将压缩
			if(resultOriginalByte.length < Compress.BYTE_MIN_LENGTH){
				byte flagByte = Compress.FLAG_GBK_STRING_UNCOMPRESSED_BYTEARRAY;
				resultBuffer.write(flagByte);
				resultBuffer.write(resultOriginalByte);
			}
			else{
				byte flagByte = Compress.FLAG_GBK_STRING_COMPRESSED_BYTEARRAY;
				resultBuffer.write(flagByte);
				resultBuffer.write(Compress.byteCompress(resultOriginalByte));
			}
			resultBuffer.flush();
			resultBuffer.close();
			os.write(resultBuffer.toByteArray());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally{
			try {
				os.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		System.out.println("响应一个基金拆分请求，字节数： " + resultBuffer.toByteArray().length );
		return null;
	}
}